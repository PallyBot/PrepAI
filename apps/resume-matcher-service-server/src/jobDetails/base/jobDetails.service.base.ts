/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobDetails as PrismaJobDetails } from "@prisma/client";

export class JobDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobDetails.count(args);
  }

  async jobDetailsItems(
    args: Prisma.JobDetailsFindManyArgs
  ): Promise<PrismaJobDetails[]> {
    return this.prisma.jobDetails.findMany(args);
  }
  async jobDetails(
    args: Prisma.JobDetailsFindUniqueArgs
  ): Promise<PrismaJobDetails | null> {
    return this.prisma.jobDetails.findUnique(args);
  }
  async createJobDetails(
    args: Prisma.JobDetailsCreateArgs
  ): Promise<PrismaJobDetails> {
    return this.prisma.jobDetails.create(args);
  }
  async updateJobDetails(
    args: Prisma.JobDetailsUpdateArgs
  ): Promise<PrismaJobDetails> {
    return this.prisma.jobDetails.update(args);
  }
  async deleteJobDetails(
    args: Prisma.JobDetailsDeleteArgs
  ): Promise<PrismaJobDetails> {
    return this.prisma.jobDetails.delete(args);
  }
}
